class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        if not s:
            return 0
        
        left = 0
        max_len = 0
        dict_sub = {}

        for right in range(len(s)):
            curr_char = s[right]
            
            if curr_char in dict_sub and dict_sub[curr_char] >= left:
                left = dict_sub[curr_char] + 1

            max_len = max(max_len, right - left + 1)
            dict_sub[curr_char] = right  # Update the last seen index of the character

        return max_len
